import Head from "next/head";
import Image from "next/image";
import { Inter } from "@next/font/google";
import styles from "../styles/Index.module.css";
import { useEffect, useState } from "react";
import Dashboard from "../components/Dashboard";
import Search from "../components/Search";
import { useRouter } from "next/router";
import axios from "axios";
import Swal from "sweetalert2";
import GridViewRoundedIcon from "@mui/icons-material/GridViewRounded";
import SearchRoundedIcon from "@mui/icons-material/SearchRounded";

const inter = Inter({ subsets: ["latin"] });

export default function Index() {
  const [activeMenu, setActiveMenu] = useState("Dashboard");

  // user data
  const [user, setUser] = useState([]);

  // router
  const router = useRouter();

  // fetch data user
  const fetchDataUser = async () => {
    const token = localStorage.getItem("token");
    axios.defaults.headers.common["Authorization"] = `Bearer ${token}`;
    await axios.post("http://localhost:8000/api/me").then((response) => {
      setUser(response.data);
    });
  };

  // check if there is no token
  useEffect(() => {
    const token = localStorage.getItem("token");
    if (!token) {
      router.push("/login");
    } else {
      fetchDataUser();
    }
  }, []);

  // function to logout from application
  const logoutHandler = async () => {
    const token = localStorage.getItem("token");
    axios.defaults.headers.common["Authorization"] = `Bearer ${token}`;
    await axios.post("http://localhost:8000/api/logout").then((response) => {
      localStorage.removeItem("token");
      router.push("/login");
      Swal.fire("Success!", "Logout Successfully!", "success");
    });
  };

  return (
    <>
      <Head>
        <title>Dashboard - SIPEDAMA</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.sidebar}>
          <img
            src={
              "https://pbs.twimg.com/profile_images/1537677628039380992/i3uUfk-Z_400x400.jpg"
            }
            style={{
              width: "100px",
              height: "100px",
              borderRadius: "100px",
              marginBottom: "15px",
              marginTop: "-50px",
            }}
          />
          <div className={styles.profile}>
            {/* <Image /> */}
            <ul className={styles.profileContainerList}>
              <li
                style={{
                  fontSize: "21px",
                  listStyle: "none",
                  fontWeight: "normal",
                }}
              >
                {user.name}
              </li>
              <li
                style={{
                  fontSize: "16px",
                  listStyle: "none",
                  fontWeight: "lighter",
                  color: "#9599A6",
                }}
              >
                Administrator App
              </li>
            </ul>
          </div>
          <div className={styles.menu}>
            <ul className={styles.menuContainerList}>
              <li
                className={styles.menuItem}
                onClick={(e) => {
                  setActiveMenu("Dashboard");
                }}
                style={
                  activeMenu == "Dashboard"
                    ? { color: "#83D887" }
                    : { color: "#FFFFFF" }
                }
              >
                <GridViewRoundedIcon
                  color={activeMenu == "Dashboard" ? "#83D887" : "#FFFFFF"}
                />
                <p>Dashboard</p>
              </li>
              {/* <li
                className={styles.menuItem}
                onClick={(e) => {
                  setActiveMenu("Search");
                }}
                style={
                  activeMenu == "Search"
                    ? { color: "#83D887" }
                    : { color: "#FFFFFF" }
                }
              >
                <SearchRoundedIcon
                  color={activeMenu == "Search" ? "#83D887" : "#FFFFFF"}
                />
                <p>Search</p>
              </li> */}
            </ul>
          </div>
          <button className={styles.btn} onClick={logoutHandler}>
            Log Out
          </button>
        </div>
        <div className={styles.content}>
          {activeMenu == "Dashboard" ? <Dashboard /> : <Search />}
        </div>
      </main>
    </>
  );
}
